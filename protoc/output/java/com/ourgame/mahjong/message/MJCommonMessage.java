// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: MJCommonMessage.proto

package com.ourgame.mahjong.message;

public final class MJCommonMessage {
  private MJCommonMessage() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface GameInfoOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required uint32 roomId = 1;
    /**
     * <code>required uint32 roomId = 1;</code>
     */
    boolean hasRoomId();
    /**
     * <code>required uint32 roomId = 1;</code>
     */
    int getRoomId();

    // required uint32 tableId = 2;
    /**
     * <code>required uint32 tableId = 2;</code>
     */
    boolean hasTableId();
    /**
     * <code>required uint32 tableId = 2;</code>
     */
    int getTableId();

    // required uint64 gameId = 3;
    /**
     * <code>required uint64 gameId = 3;</code>
     */
    boolean hasGameId();
    /**
     * <code>required uint64 gameId = 3;</code>
     */
    long getGameId();

    // required uint64 gameServer = 4;
    /**
     * <code>required uint64 gameServer = 4;</code>
     */
    boolean hasGameServer();
    /**
     * <code>required uint64 gameServer = 4;</code>
     */
    long getGameServer();
  }
  /**
   * Protobuf type {@code com.ourgame.mahjong.message.GameInfo}
   *
   * <pre>
   * GAME信息
   * </pre>
   */
  public static final class GameInfo extends
      com.google.protobuf.GeneratedMessage
      implements GameInfoOrBuilder {
    // Use GameInfo.newBuilder() to construct.
    private GameInfo(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private GameInfo(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final GameInfo defaultInstance;
    public static GameInfo getDefaultInstance() {
      return defaultInstance;
    }

    public GameInfo getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private GameInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              roomId_ = input.readUInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              tableId_ = input.readUInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              gameId_ = input.readUInt64();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              gameServer_ = input.readUInt64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.ourgame.mahjong.message.MJCommonMessage.internal_static_com_ourgame_mahjong_message_GameInfo_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.ourgame.mahjong.message.MJCommonMessage.internal_static_com_ourgame_mahjong_message_GameInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.ourgame.mahjong.message.MJCommonMessage.GameInfo.class, com.ourgame.mahjong.message.MJCommonMessage.GameInfo.Builder.class);
    }

    public static com.google.protobuf.Parser<GameInfo> PARSER =
        new com.google.protobuf.AbstractParser<GameInfo>() {
      public GameInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new GameInfo(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<GameInfo> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required uint32 roomId = 1;
    public static final int ROOMID_FIELD_NUMBER = 1;
    private int roomId_;
    /**
     * <code>required uint32 roomId = 1;</code>
     */
    public boolean hasRoomId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required uint32 roomId = 1;</code>
     */
    public int getRoomId() {
      return roomId_;
    }

    // required uint32 tableId = 2;
    public static final int TABLEID_FIELD_NUMBER = 2;
    private int tableId_;
    /**
     * <code>required uint32 tableId = 2;</code>
     */
    public boolean hasTableId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required uint32 tableId = 2;</code>
     */
    public int getTableId() {
      return tableId_;
    }

    // required uint64 gameId = 3;
    public static final int GAMEID_FIELD_NUMBER = 3;
    private long gameId_;
    /**
     * <code>required uint64 gameId = 3;</code>
     */
    public boolean hasGameId() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required uint64 gameId = 3;</code>
     */
    public long getGameId() {
      return gameId_;
    }

    // required uint64 gameServer = 4;
    public static final int GAMESERVER_FIELD_NUMBER = 4;
    private long gameServer_;
    /**
     * <code>required uint64 gameServer = 4;</code>
     */
    public boolean hasGameServer() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required uint64 gameServer = 4;</code>
     */
    public long getGameServer() {
      return gameServer_;
    }

    private void initFields() {
      roomId_ = 0;
      tableId_ = 0;
      gameId_ = 0L;
      gameServer_ = 0L;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasRoomId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasTableId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasGameId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasGameServer()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, roomId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, tableId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt64(3, gameId_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeUInt64(4, gameServer_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, roomId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, tableId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(3, gameId_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(4, gameServer_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.ourgame.mahjong.message.MJCommonMessage.GameInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ourgame.mahjong.message.MJCommonMessage.GameInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ourgame.mahjong.message.MJCommonMessage.GameInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ourgame.mahjong.message.MJCommonMessage.GameInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ourgame.mahjong.message.MJCommonMessage.GameInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.ourgame.mahjong.message.MJCommonMessage.GameInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.ourgame.mahjong.message.MJCommonMessage.GameInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.ourgame.mahjong.message.MJCommonMessage.GameInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.ourgame.mahjong.message.MJCommonMessage.GameInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.ourgame.mahjong.message.MJCommonMessage.GameInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.ourgame.mahjong.message.MJCommonMessage.GameInfo prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.ourgame.mahjong.message.GameInfo}
     *
     * <pre>
     * GAME信息
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.ourgame.mahjong.message.MJCommonMessage.GameInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.ourgame.mahjong.message.MJCommonMessage.internal_static_com_ourgame_mahjong_message_GameInfo_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.ourgame.mahjong.message.MJCommonMessage.internal_static_com_ourgame_mahjong_message_GameInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.ourgame.mahjong.message.MJCommonMessage.GameInfo.class, com.ourgame.mahjong.message.MJCommonMessage.GameInfo.Builder.class);
      }

      // Construct using com.ourgame.mahjong.message.MJCommonMessage.GameInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        roomId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        tableId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        gameId_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000004);
        gameServer_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.ourgame.mahjong.message.MJCommonMessage.internal_static_com_ourgame_mahjong_message_GameInfo_descriptor;
      }

      public com.ourgame.mahjong.message.MJCommonMessage.GameInfo getDefaultInstanceForType() {
        return com.ourgame.mahjong.message.MJCommonMessage.GameInfo.getDefaultInstance();
      }

      public com.ourgame.mahjong.message.MJCommonMessage.GameInfo build() {
        com.ourgame.mahjong.message.MJCommonMessage.GameInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.ourgame.mahjong.message.MJCommonMessage.GameInfo buildPartial() {
        com.ourgame.mahjong.message.MJCommonMessage.GameInfo result = new com.ourgame.mahjong.message.MJCommonMessage.GameInfo(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.roomId_ = roomId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.tableId_ = tableId_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.gameId_ = gameId_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.gameServer_ = gameServer_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.ourgame.mahjong.message.MJCommonMessage.GameInfo) {
          return mergeFrom((com.ourgame.mahjong.message.MJCommonMessage.GameInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.ourgame.mahjong.message.MJCommonMessage.GameInfo other) {
        if (other == com.ourgame.mahjong.message.MJCommonMessage.GameInfo.getDefaultInstance()) return this;
        if (other.hasRoomId()) {
          setRoomId(other.getRoomId());
        }
        if (other.hasTableId()) {
          setTableId(other.getTableId());
        }
        if (other.hasGameId()) {
          setGameId(other.getGameId());
        }
        if (other.hasGameServer()) {
          setGameServer(other.getGameServer());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasRoomId()) {
          
          return false;
        }
        if (!hasTableId()) {
          
          return false;
        }
        if (!hasGameId()) {
          
          return false;
        }
        if (!hasGameServer()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.ourgame.mahjong.message.MJCommonMessage.GameInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.ourgame.mahjong.message.MJCommonMessage.GameInfo) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required uint32 roomId = 1;
      private int roomId_ ;
      /**
       * <code>required uint32 roomId = 1;</code>
       */
      public boolean hasRoomId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required uint32 roomId = 1;</code>
       */
      public int getRoomId() {
        return roomId_;
      }
      /**
       * <code>required uint32 roomId = 1;</code>
       */
      public Builder setRoomId(int value) {
        bitField0_ |= 0x00000001;
        roomId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required uint32 roomId = 1;</code>
       */
      public Builder clearRoomId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        roomId_ = 0;
        onChanged();
        return this;
      }

      // required uint32 tableId = 2;
      private int tableId_ ;
      /**
       * <code>required uint32 tableId = 2;</code>
       */
      public boolean hasTableId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required uint32 tableId = 2;</code>
       */
      public int getTableId() {
        return tableId_;
      }
      /**
       * <code>required uint32 tableId = 2;</code>
       */
      public Builder setTableId(int value) {
        bitField0_ |= 0x00000002;
        tableId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required uint32 tableId = 2;</code>
       */
      public Builder clearTableId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        tableId_ = 0;
        onChanged();
        return this;
      }

      // required uint64 gameId = 3;
      private long gameId_ ;
      /**
       * <code>required uint64 gameId = 3;</code>
       */
      public boolean hasGameId() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required uint64 gameId = 3;</code>
       */
      public long getGameId() {
        return gameId_;
      }
      /**
       * <code>required uint64 gameId = 3;</code>
       */
      public Builder setGameId(long value) {
        bitField0_ |= 0x00000004;
        gameId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required uint64 gameId = 3;</code>
       */
      public Builder clearGameId() {
        bitField0_ = (bitField0_ & ~0x00000004);
        gameId_ = 0L;
        onChanged();
        return this;
      }

      // required uint64 gameServer = 4;
      private long gameServer_ ;
      /**
       * <code>required uint64 gameServer = 4;</code>
       */
      public boolean hasGameServer() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required uint64 gameServer = 4;</code>
       */
      public long getGameServer() {
        return gameServer_;
      }
      /**
       * <code>required uint64 gameServer = 4;</code>
       */
      public Builder setGameServer(long value) {
        bitField0_ |= 0x00000008;
        gameServer_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required uint64 gameServer = 4;</code>
       */
      public Builder clearGameServer() {
        bitField0_ = (bitField0_ & ~0x00000008);
        gameServer_ = 0L;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.ourgame.mahjong.message.GameInfo)
    }

    static {
      defaultInstance = new GameInfo(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.ourgame.mahjong.message.GameInfo)
  }

  public interface RoomOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required uint32 roomId = 1;
    /**
     * <code>required uint32 roomId = 1;</code>
     *
     * <pre>
     *房间ID
     * </pre>
     */
    boolean hasRoomId();
    /**
     * <code>required uint32 roomId = 1;</code>
     *
     * <pre>
     *房间ID
     * </pre>
     */
    int getRoomId();

    // required string roomName = 2;
    /**
     * <code>required string roomName = 2;</code>
     *
     * <pre>
     *房间名称
     * </pre>
     */
    boolean hasRoomName();
    /**
     * <code>required string roomName = 2;</code>
     *
     * <pre>
     *房间名称
     * </pre>
     */
    java.lang.String getRoomName();
    /**
     * <code>required string roomName = 2;</code>
     *
     * <pre>
     *房间名称
     * </pre>
     */
    com.google.protobuf.ByteString
        getRoomNameBytes();

    // required uint32 roomType = 3;
    /**
     * <code>required uint32 roomType = 3;</code>
     *
     * <pre>
     *房间类型	1-自动配桌房间；2-手动配桌房间
     * </pre>
     */
    boolean hasRoomType();
    /**
     * <code>required uint32 roomType = 3;</code>
     *
     * <pre>
     *房间类型	1-自动配桌房间；2-手动配桌房间
     * </pre>
     */
    int getRoomType();

    // required uint32 gameType = 4;
    /**
     * <code>required uint32 gameType = 4;</code>
     *
     * <pre>
     *游戏类型	1-血流成河
     * </pre>
     */
    boolean hasGameType();
    /**
     * <code>required uint32 gameType = 4;</code>
     *
     * <pre>
     *游戏类型	1-血流成河
     * </pre>
     */
    int getGameType();

    // optional uint32 userAmount = 5;
    /**
     * <code>optional uint32 userAmount = 5;</code>
     *
     * <pre>
     *房间用户数
     * </pre>
     */
    boolean hasUserAmount();
    /**
     * <code>optional uint32 userAmount = 5;</code>
     *
     * <pre>
     *房间用户数
     * </pre>
     */
    int getUserAmount();

    // optional uint32 enterBuyIn = 6;
    /**
     * <code>optional uint32 enterBuyIn = 6;</code>
     *
     * <pre>
     *买入值
     * </pre>
     */
    boolean hasEnterBuyIn();
    /**
     * <code>optional uint32 enterBuyIn = 6;</code>
     *
     * <pre>
     *买入值
     * </pre>
     */
    int getEnterBuyIn();

    // optional uint32 unitValue = 7;
    /**
     * <code>optional uint32 unitValue = 7;</code>
     *
     * <pre>
     *兑换比值，每奖分价值万能豆
     * </pre>
     */
    boolean hasUnitValue();
    /**
     * <code>optional uint32 unitValue = 7;</code>
     *
     * <pre>
     *兑换比值，每奖分价值万能豆
     * </pre>
     */
    int getUnitValue();
  }
  /**
   * Protobuf type {@code com.ourgame.mahjong.message.Room}
   *
   * <pre>
   * 房间
   * </pre>
   */
  public static final class Room extends
      com.google.protobuf.GeneratedMessage
      implements RoomOrBuilder {
    // Use Room.newBuilder() to construct.
    private Room(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Room(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Room defaultInstance;
    public static Room getDefaultInstance() {
      return defaultInstance;
    }

    public Room getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Room(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              roomId_ = input.readUInt32();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              roomName_ = input.readBytes();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              roomType_ = input.readUInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              gameType_ = input.readUInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              userAmount_ = input.readUInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              enterBuyIn_ = input.readUInt32();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              unitValue_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.ourgame.mahjong.message.MJCommonMessage.internal_static_com_ourgame_mahjong_message_Room_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.ourgame.mahjong.message.MJCommonMessage.internal_static_com_ourgame_mahjong_message_Room_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.ourgame.mahjong.message.MJCommonMessage.Room.class, com.ourgame.mahjong.message.MJCommonMessage.Room.Builder.class);
    }

    public static com.google.protobuf.Parser<Room> PARSER =
        new com.google.protobuf.AbstractParser<Room>() {
      public Room parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Room(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Room> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required uint32 roomId = 1;
    public static final int ROOMID_FIELD_NUMBER = 1;
    private int roomId_;
    /**
     * <code>required uint32 roomId = 1;</code>
     *
     * <pre>
     *房间ID
     * </pre>
     */
    public boolean hasRoomId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required uint32 roomId = 1;</code>
     *
     * <pre>
     *房间ID
     * </pre>
     */
    public int getRoomId() {
      return roomId_;
    }

    // required string roomName = 2;
    public static final int ROOMNAME_FIELD_NUMBER = 2;
    private java.lang.Object roomName_;
    /**
     * <code>required string roomName = 2;</code>
     *
     * <pre>
     *房间名称
     * </pre>
     */
    public boolean hasRoomName() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required string roomName = 2;</code>
     *
     * <pre>
     *房间名称
     * </pre>
     */
    public java.lang.String getRoomName() {
      java.lang.Object ref = roomName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          roomName_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string roomName = 2;</code>
     *
     * <pre>
     *房间名称
     * </pre>
     */
    public com.google.protobuf.ByteString
        getRoomNameBytes() {
      java.lang.Object ref = roomName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        roomName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // required uint32 roomType = 3;
    public static final int ROOMTYPE_FIELD_NUMBER = 3;
    private int roomType_;
    /**
     * <code>required uint32 roomType = 3;</code>
     *
     * <pre>
     *房间类型	1-自动配桌房间；2-手动配桌房间
     * </pre>
     */
    public boolean hasRoomType() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required uint32 roomType = 3;</code>
     *
     * <pre>
     *房间类型	1-自动配桌房间；2-手动配桌房间
     * </pre>
     */
    public int getRoomType() {
      return roomType_;
    }

    // required uint32 gameType = 4;
    public static final int GAMETYPE_FIELD_NUMBER = 4;
    private int gameType_;
    /**
     * <code>required uint32 gameType = 4;</code>
     *
     * <pre>
     *游戏类型	1-血流成河
     * </pre>
     */
    public boolean hasGameType() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required uint32 gameType = 4;</code>
     *
     * <pre>
     *游戏类型	1-血流成河
     * </pre>
     */
    public int getGameType() {
      return gameType_;
    }

    // optional uint32 userAmount = 5;
    public static final int USERAMOUNT_FIELD_NUMBER = 5;
    private int userAmount_;
    /**
     * <code>optional uint32 userAmount = 5;</code>
     *
     * <pre>
     *房间用户数
     * </pre>
     */
    public boolean hasUserAmount() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional uint32 userAmount = 5;</code>
     *
     * <pre>
     *房间用户数
     * </pre>
     */
    public int getUserAmount() {
      return userAmount_;
    }

    // optional uint32 enterBuyIn = 6;
    public static final int ENTERBUYIN_FIELD_NUMBER = 6;
    private int enterBuyIn_;
    /**
     * <code>optional uint32 enterBuyIn = 6;</code>
     *
     * <pre>
     *买入值
     * </pre>
     */
    public boolean hasEnterBuyIn() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional uint32 enterBuyIn = 6;</code>
     *
     * <pre>
     *买入值
     * </pre>
     */
    public int getEnterBuyIn() {
      return enterBuyIn_;
    }

    // optional uint32 unitValue = 7;
    public static final int UNITVALUE_FIELD_NUMBER = 7;
    private int unitValue_;
    /**
     * <code>optional uint32 unitValue = 7;</code>
     *
     * <pre>
     *兑换比值，每奖分价值万能豆
     * </pre>
     */
    public boolean hasUnitValue() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional uint32 unitValue = 7;</code>
     *
     * <pre>
     *兑换比值，每奖分价值万能豆
     * </pre>
     */
    public int getUnitValue() {
      return unitValue_;
    }

    private void initFields() {
      roomId_ = 0;
      roomName_ = "";
      roomType_ = 0;
      gameType_ = 0;
      userAmount_ = 0;
      enterBuyIn_ = 0;
      unitValue_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasRoomId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasRoomName()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasRoomType()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasGameType()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, roomId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getRoomNameBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt32(3, roomType_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeUInt32(4, gameType_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeUInt32(5, userAmount_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeUInt32(6, enterBuyIn_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeUInt32(7, unitValue_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, roomId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getRoomNameBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, roomType_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(4, gameType_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(5, userAmount_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(6, enterBuyIn_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(7, unitValue_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.ourgame.mahjong.message.MJCommonMessage.Room parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ourgame.mahjong.message.MJCommonMessage.Room parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ourgame.mahjong.message.MJCommonMessage.Room parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ourgame.mahjong.message.MJCommonMessage.Room parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ourgame.mahjong.message.MJCommonMessage.Room parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.ourgame.mahjong.message.MJCommonMessage.Room parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.ourgame.mahjong.message.MJCommonMessage.Room parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.ourgame.mahjong.message.MJCommonMessage.Room parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.ourgame.mahjong.message.MJCommonMessage.Room parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.ourgame.mahjong.message.MJCommonMessage.Room parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.ourgame.mahjong.message.MJCommonMessage.Room prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.ourgame.mahjong.message.Room}
     *
     * <pre>
     * 房间
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.ourgame.mahjong.message.MJCommonMessage.RoomOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.ourgame.mahjong.message.MJCommonMessage.internal_static_com_ourgame_mahjong_message_Room_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.ourgame.mahjong.message.MJCommonMessage.internal_static_com_ourgame_mahjong_message_Room_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.ourgame.mahjong.message.MJCommonMessage.Room.class, com.ourgame.mahjong.message.MJCommonMessage.Room.Builder.class);
      }

      // Construct using com.ourgame.mahjong.message.MJCommonMessage.Room.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        roomId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        roomName_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        roomType_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        gameType_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        userAmount_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        enterBuyIn_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        unitValue_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.ourgame.mahjong.message.MJCommonMessage.internal_static_com_ourgame_mahjong_message_Room_descriptor;
      }

      public com.ourgame.mahjong.message.MJCommonMessage.Room getDefaultInstanceForType() {
        return com.ourgame.mahjong.message.MJCommonMessage.Room.getDefaultInstance();
      }

      public com.ourgame.mahjong.message.MJCommonMessage.Room build() {
        com.ourgame.mahjong.message.MJCommonMessage.Room result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.ourgame.mahjong.message.MJCommonMessage.Room buildPartial() {
        com.ourgame.mahjong.message.MJCommonMessage.Room result = new com.ourgame.mahjong.message.MJCommonMessage.Room(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.roomId_ = roomId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.roomName_ = roomName_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.roomType_ = roomType_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.gameType_ = gameType_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.userAmount_ = userAmount_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.enterBuyIn_ = enterBuyIn_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.unitValue_ = unitValue_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.ourgame.mahjong.message.MJCommonMessage.Room) {
          return mergeFrom((com.ourgame.mahjong.message.MJCommonMessage.Room)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.ourgame.mahjong.message.MJCommonMessage.Room other) {
        if (other == com.ourgame.mahjong.message.MJCommonMessage.Room.getDefaultInstance()) return this;
        if (other.hasRoomId()) {
          setRoomId(other.getRoomId());
        }
        if (other.hasRoomName()) {
          bitField0_ |= 0x00000002;
          roomName_ = other.roomName_;
          onChanged();
        }
        if (other.hasRoomType()) {
          setRoomType(other.getRoomType());
        }
        if (other.hasGameType()) {
          setGameType(other.getGameType());
        }
        if (other.hasUserAmount()) {
          setUserAmount(other.getUserAmount());
        }
        if (other.hasEnterBuyIn()) {
          setEnterBuyIn(other.getEnterBuyIn());
        }
        if (other.hasUnitValue()) {
          setUnitValue(other.getUnitValue());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasRoomId()) {
          
          return false;
        }
        if (!hasRoomName()) {
          
          return false;
        }
        if (!hasRoomType()) {
          
          return false;
        }
        if (!hasGameType()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.ourgame.mahjong.message.MJCommonMessage.Room parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.ourgame.mahjong.message.MJCommonMessage.Room) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required uint32 roomId = 1;
      private int roomId_ ;
      /**
       * <code>required uint32 roomId = 1;</code>
       *
       * <pre>
       *房间ID
       * </pre>
       */
      public boolean hasRoomId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required uint32 roomId = 1;</code>
       *
       * <pre>
       *房间ID
       * </pre>
       */
      public int getRoomId() {
        return roomId_;
      }
      /**
       * <code>required uint32 roomId = 1;</code>
       *
       * <pre>
       *房间ID
       * </pre>
       */
      public Builder setRoomId(int value) {
        bitField0_ |= 0x00000001;
        roomId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required uint32 roomId = 1;</code>
       *
       * <pre>
       *房间ID
       * </pre>
       */
      public Builder clearRoomId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        roomId_ = 0;
        onChanged();
        return this;
      }

      // required string roomName = 2;
      private java.lang.Object roomName_ = "";
      /**
       * <code>required string roomName = 2;</code>
       *
       * <pre>
       *房间名称
       * </pre>
       */
      public boolean hasRoomName() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required string roomName = 2;</code>
       *
       * <pre>
       *房间名称
       * </pre>
       */
      public java.lang.String getRoomName() {
        java.lang.Object ref = roomName_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          roomName_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string roomName = 2;</code>
       *
       * <pre>
       *房间名称
       * </pre>
       */
      public com.google.protobuf.ByteString
          getRoomNameBytes() {
        java.lang.Object ref = roomName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          roomName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string roomName = 2;</code>
       *
       * <pre>
       *房间名称
       * </pre>
       */
      public Builder setRoomName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        roomName_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string roomName = 2;</code>
       *
       * <pre>
       *房间名称
       * </pre>
       */
      public Builder clearRoomName() {
        bitField0_ = (bitField0_ & ~0x00000002);
        roomName_ = getDefaultInstance().getRoomName();
        onChanged();
        return this;
      }
      /**
       * <code>required string roomName = 2;</code>
       *
       * <pre>
       *房间名称
       * </pre>
       */
      public Builder setRoomNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        roomName_ = value;
        onChanged();
        return this;
      }

      // required uint32 roomType = 3;
      private int roomType_ ;
      /**
       * <code>required uint32 roomType = 3;</code>
       *
       * <pre>
       *房间类型	1-自动配桌房间；2-手动配桌房间
       * </pre>
       */
      public boolean hasRoomType() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required uint32 roomType = 3;</code>
       *
       * <pre>
       *房间类型	1-自动配桌房间；2-手动配桌房间
       * </pre>
       */
      public int getRoomType() {
        return roomType_;
      }
      /**
       * <code>required uint32 roomType = 3;</code>
       *
       * <pre>
       *房间类型	1-自动配桌房间；2-手动配桌房间
       * </pre>
       */
      public Builder setRoomType(int value) {
        bitField0_ |= 0x00000004;
        roomType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required uint32 roomType = 3;</code>
       *
       * <pre>
       *房间类型	1-自动配桌房间；2-手动配桌房间
       * </pre>
       */
      public Builder clearRoomType() {
        bitField0_ = (bitField0_ & ~0x00000004);
        roomType_ = 0;
        onChanged();
        return this;
      }

      // required uint32 gameType = 4;
      private int gameType_ ;
      /**
       * <code>required uint32 gameType = 4;</code>
       *
       * <pre>
       *游戏类型	1-血流成河
       * </pre>
       */
      public boolean hasGameType() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required uint32 gameType = 4;</code>
       *
       * <pre>
       *游戏类型	1-血流成河
       * </pre>
       */
      public int getGameType() {
        return gameType_;
      }
      /**
       * <code>required uint32 gameType = 4;</code>
       *
       * <pre>
       *游戏类型	1-血流成河
       * </pre>
       */
      public Builder setGameType(int value) {
        bitField0_ |= 0x00000008;
        gameType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required uint32 gameType = 4;</code>
       *
       * <pre>
       *游戏类型	1-血流成河
       * </pre>
       */
      public Builder clearGameType() {
        bitField0_ = (bitField0_ & ~0x00000008);
        gameType_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 userAmount = 5;
      private int userAmount_ ;
      /**
       * <code>optional uint32 userAmount = 5;</code>
       *
       * <pre>
       *房间用户数
       * </pre>
       */
      public boolean hasUserAmount() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional uint32 userAmount = 5;</code>
       *
       * <pre>
       *房间用户数
       * </pre>
       */
      public int getUserAmount() {
        return userAmount_;
      }
      /**
       * <code>optional uint32 userAmount = 5;</code>
       *
       * <pre>
       *房间用户数
       * </pre>
       */
      public Builder setUserAmount(int value) {
        bitField0_ |= 0x00000010;
        userAmount_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 userAmount = 5;</code>
       *
       * <pre>
       *房间用户数
       * </pre>
       */
      public Builder clearUserAmount() {
        bitField0_ = (bitField0_ & ~0x00000010);
        userAmount_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 enterBuyIn = 6;
      private int enterBuyIn_ ;
      /**
       * <code>optional uint32 enterBuyIn = 6;</code>
       *
       * <pre>
       *买入值
       * </pre>
       */
      public boolean hasEnterBuyIn() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional uint32 enterBuyIn = 6;</code>
       *
       * <pre>
       *买入值
       * </pre>
       */
      public int getEnterBuyIn() {
        return enterBuyIn_;
      }
      /**
       * <code>optional uint32 enterBuyIn = 6;</code>
       *
       * <pre>
       *买入值
       * </pre>
       */
      public Builder setEnterBuyIn(int value) {
        bitField0_ |= 0x00000020;
        enterBuyIn_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 enterBuyIn = 6;</code>
       *
       * <pre>
       *买入值
       * </pre>
       */
      public Builder clearEnterBuyIn() {
        bitField0_ = (bitField0_ & ~0x00000020);
        enterBuyIn_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 unitValue = 7;
      private int unitValue_ ;
      /**
       * <code>optional uint32 unitValue = 7;</code>
       *
       * <pre>
       *兑换比值，每奖分价值万能豆
       * </pre>
       */
      public boolean hasUnitValue() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional uint32 unitValue = 7;</code>
       *
       * <pre>
       *兑换比值，每奖分价值万能豆
       * </pre>
       */
      public int getUnitValue() {
        return unitValue_;
      }
      /**
       * <code>optional uint32 unitValue = 7;</code>
       *
       * <pre>
       *兑换比值，每奖分价值万能豆
       * </pre>
       */
      public Builder setUnitValue(int value) {
        bitField0_ |= 0x00000040;
        unitValue_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 unitValue = 7;</code>
       *
       * <pre>
       *兑换比值，每奖分价值万能豆
       * </pre>
       */
      public Builder clearUnitValue() {
        bitField0_ = (bitField0_ & ~0x00000040);
        unitValue_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.ourgame.mahjong.message.Room)
    }

    static {
      defaultInstance = new Room(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.ourgame.mahjong.message.Room)
  }

  public interface TableOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required uint32 tableId = 1;
    /**
     * <code>required uint32 tableId = 1;</code>
     *
     * <pre>
     *桌子ID
     * </pre>
     */
    boolean hasTableId();
    /**
     * <code>required uint32 tableId = 1;</code>
     *
     * <pre>
     *桌子ID
     * </pre>
     */
    int getTableId();

    // required string tableName = 2;
    /**
     * <code>required string tableName = 2;</code>
     *
     * <pre>
     *桌子名
     * </pre>
     */
    boolean hasTableName();
    /**
     * <code>required string tableName = 2;</code>
     *
     * <pre>
     *桌子名
     * </pre>
     */
    java.lang.String getTableName();
    /**
     * <code>required string tableName = 2;</code>
     *
     * <pre>
     *桌子名
     * </pre>
     */
    com.google.protobuf.ByteString
        getTableNameBytes();

    // required uint32 playerAmount = 3;
    /**
     * <code>required uint32 playerAmount = 3;</code>
     *
     * <pre>
     *用户数量
     * </pre>
     */
    boolean hasPlayerAmount();
    /**
     * <code>required uint32 playerAmount = 3;</code>
     *
     * <pre>
     *用户数量
     * </pre>
     */
    int getPlayerAmount();

    // required uint32 maxPlayerAmount = 4;
    /**
     * <code>required uint32 maxPlayerAmount = 4;</code>
     *
     * <pre>
     *最大游戏人数
     * </pre>
     */
    boolean hasMaxPlayerAmount();
    /**
     * <code>required uint32 maxPlayerAmount = 4;</code>
     *
     * <pre>
     *最大游戏人数
     * </pre>
     */
    int getMaxPlayerAmount();

    // required uint64 enterBuyin = 5;
    /**
     * <code>required uint64 enterBuyin = 5;</code>
     *
     * <pre>
     *进桌买入量
     * </pre>
     */
    boolean hasEnterBuyin();
    /**
     * <code>required uint64 enterBuyin = 5;</code>
     *
     * <pre>
     *进桌买入量
     * </pre>
     */
    long getEnterBuyin();

    // required uint64 enterScore = 6;
    /**
     * <code>required uint64 enterScore = 6;</code>
     *
     * <pre>
     *买入所换的积分数量
     * </pre>
     */
    boolean hasEnterScore();
    /**
     * <code>required uint64 enterScore = 6;</code>
     *
     * <pre>
     *买入所换的积分数量
     * </pre>
     */
    long getEnterScore();

    // required uint32 unitValue = 7;
    /**
     * <code>required uint32 unitValue = 7;</code>
     *
     * <pre>
     *游戏每奖分折合桌子积分的数量
     * </pre>
     */
    boolean hasUnitValue();
    /**
     * <code>required uint32 unitValue = 7;</code>
     *
     * <pre>
     *游戏每奖分折合桌子积分的数量
     * </pre>
     */
    int getUnitValue();

    // required uint32 minScore = 8;
    /**
     * <code>required uint32 minScore = 8;</code>
     *
     * <pre>
     *最低积分，积分低于此值将会被强制要求重新买入，或踢出
     * </pre>
     */
    boolean hasMinScore();
    /**
     * <code>required uint32 minScore = 8;</code>
     *
     * <pre>
     *最低积分，积分低于此值将会被强制要求重新买入，或踢出
     * </pre>
     */
    int getMinScore();
  }
  /**
   * Protobuf type {@code com.ourgame.mahjong.message.Table}
   *
   * <pre>
   * 桌子
   * </pre>
   */
  public static final class Table extends
      com.google.protobuf.GeneratedMessage
      implements TableOrBuilder {
    // Use Table.newBuilder() to construct.
    private Table(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Table(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Table defaultInstance;
    public static Table getDefaultInstance() {
      return defaultInstance;
    }

    public Table getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Table(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              tableId_ = input.readUInt32();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              tableName_ = input.readBytes();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              playerAmount_ = input.readUInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              maxPlayerAmount_ = input.readUInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              enterBuyin_ = input.readUInt64();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              enterScore_ = input.readUInt64();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              unitValue_ = input.readUInt32();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000080;
              minScore_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.ourgame.mahjong.message.MJCommonMessage.internal_static_com_ourgame_mahjong_message_Table_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.ourgame.mahjong.message.MJCommonMessage.internal_static_com_ourgame_mahjong_message_Table_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.ourgame.mahjong.message.MJCommonMessage.Table.class, com.ourgame.mahjong.message.MJCommonMessage.Table.Builder.class);
    }

    public static com.google.protobuf.Parser<Table> PARSER =
        new com.google.protobuf.AbstractParser<Table>() {
      public Table parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Table(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Table> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required uint32 tableId = 1;
    public static final int TABLEID_FIELD_NUMBER = 1;
    private int tableId_;
    /**
     * <code>required uint32 tableId = 1;</code>
     *
     * <pre>
     *桌子ID
     * </pre>
     */
    public boolean hasTableId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required uint32 tableId = 1;</code>
     *
     * <pre>
     *桌子ID
     * </pre>
     */
    public int getTableId() {
      return tableId_;
    }

    // required string tableName = 2;
    public static final int TABLENAME_FIELD_NUMBER = 2;
    private java.lang.Object tableName_;
    /**
     * <code>required string tableName = 2;</code>
     *
     * <pre>
     *桌子名
     * </pre>
     */
    public boolean hasTableName() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required string tableName = 2;</code>
     *
     * <pre>
     *桌子名
     * </pre>
     */
    public java.lang.String getTableName() {
      java.lang.Object ref = tableName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          tableName_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string tableName = 2;</code>
     *
     * <pre>
     *桌子名
     * </pre>
     */
    public com.google.protobuf.ByteString
        getTableNameBytes() {
      java.lang.Object ref = tableName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        tableName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // required uint32 playerAmount = 3;
    public static final int PLAYERAMOUNT_FIELD_NUMBER = 3;
    private int playerAmount_;
    /**
     * <code>required uint32 playerAmount = 3;</code>
     *
     * <pre>
     *用户数量
     * </pre>
     */
    public boolean hasPlayerAmount() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required uint32 playerAmount = 3;</code>
     *
     * <pre>
     *用户数量
     * </pre>
     */
    public int getPlayerAmount() {
      return playerAmount_;
    }

    // required uint32 maxPlayerAmount = 4;
    public static final int MAXPLAYERAMOUNT_FIELD_NUMBER = 4;
    private int maxPlayerAmount_;
    /**
     * <code>required uint32 maxPlayerAmount = 4;</code>
     *
     * <pre>
     *最大游戏人数
     * </pre>
     */
    public boolean hasMaxPlayerAmount() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required uint32 maxPlayerAmount = 4;</code>
     *
     * <pre>
     *最大游戏人数
     * </pre>
     */
    public int getMaxPlayerAmount() {
      return maxPlayerAmount_;
    }

    // required uint64 enterBuyin = 5;
    public static final int ENTERBUYIN_FIELD_NUMBER = 5;
    private long enterBuyin_;
    /**
     * <code>required uint64 enterBuyin = 5;</code>
     *
     * <pre>
     *进桌买入量
     * </pre>
     */
    public boolean hasEnterBuyin() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>required uint64 enterBuyin = 5;</code>
     *
     * <pre>
     *进桌买入量
     * </pre>
     */
    public long getEnterBuyin() {
      return enterBuyin_;
    }

    // required uint64 enterScore = 6;
    public static final int ENTERSCORE_FIELD_NUMBER = 6;
    private long enterScore_;
    /**
     * <code>required uint64 enterScore = 6;</code>
     *
     * <pre>
     *买入所换的积分数量
     * </pre>
     */
    public boolean hasEnterScore() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>required uint64 enterScore = 6;</code>
     *
     * <pre>
     *买入所换的积分数量
     * </pre>
     */
    public long getEnterScore() {
      return enterScore_;
    }

    // required uint32 unitValue = 7;
    public static final int UNITVALUE_FIELD_NUMBER = 7;
    private int unitValue_;
    /**
     * <code>required uint32 unitValue = 7;</code>
     *
     * <pre>
     *游戏每奖分折合桌子积分的数量
     * </pre>
     */
    public boolean hasUnitValue() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>required uint32 unitValue = 7;</code>
     *
     * <pre>
     *游戏每奖分折合桌子积分的数量
     * </pre>
     */
    public int getUnitValue() {
      return unitValue_;
    }

    // required uint32 minScore = 8;
    public static final int MINSCORE_FIELD_NUMBER = 8;
    private int minScore_;
    /**
     * <code>required uint32 minScore = 8;</code>
     *
     * <pre>
     *最低积分，积分低于此值将会被强制要求重新买入，或踢出
     * </pre>
     */
    public boolean hasMinScore() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>required uint32 minScore = 8;</code>
     *
     * <pre>
     *最低积分，积分低于此值将会被强制要求重新买入，或踢出
     * </pre>
     */
    public int getMinScore() {
      return minScore_;
    }

    private void initFields() {
      tableId_ = 0;
      tableName_ = "";
      playerAmount_ = 0;
      maxPlayerAmount_ = 0;
      enterBuyin_ = 0L;
      enterScore_ = 0L;
      unitValue_ = 0;
      minScore_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasTableId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasTableName()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasPlayerAmount()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasMaxPlayerAmount()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasEnterBuyin()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasEnterScore()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasUnitValue()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasMinScore()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, tableId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getTableNameBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt32(3, playerAmount_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeUInt32(4, maxPlayerAmount_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeUInt64(5, enterBuyin_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeUInt64(6, enterScore_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeUInt32(7, unitValue_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeUInt32(8, minScore_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, tableId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getTableNameBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, playerAmount_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(4, maxPlayerAmount_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(5, enterBuyin_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(6, enterScore_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(7, unitValue_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(8, minScore_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.ourgame.mahjong.message.MJCommonMessage.Table parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ourgame.mahjong.message.MJCommonMessage.Table parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ourgame.mahjong.message.MJCommonMessage.Table parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ourgame.mahjong.message.MJCommonMessage.Table parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ourgame.mahjong.message.MJCommonMessage.Table parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.ourgame.mahjong.message.MJCommonMessage.Table parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.ourgame.mahjong.message.MJCommonMessage.Table parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.ourgame.mahjong.message.MJCommonMessage.Table parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.ourgame.mahjong.message.MJCommonMessage.Table parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.ourgame.mahjong.message.MJCommonMessage.Table parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.ourgame.mahjong.message.MJCommonMessage.Table prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.ourgame.mahjong.message.Table}
     *
     * <pre>
     * 桌子
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.ourgame.mahjong.message.MJCommonMessage.TableOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.ourgame.mahjong.message.MJCommonMessage.internal_static_com_ourgame_mahjong_message_Table_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.ourgame.mahjong.message.MJCommonMessage.internal_static_com_ourgame_mahjong_message_Table_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.ourgame.mahjong.message.MJCommonMessage.Table.class, com.ourgame.mahjong.message.MJCommonMessage.Table.Builder.class);
      }

      // Construct using com.ourgame.mahjong.message.MJCommonMessage.Table.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        tableId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        tableName_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        playerAmount_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        maxPlayerAmount_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        enterBuyin_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000010);
        enterScore_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000020);
        unitValue_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        minScore_ = 0;
        bitField0_ = (bitField0_ & ~0x00000080);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.ourgame.mahjong.message.MJCommonMessage.internal_static_com_ourgame_mahjong_message_Table_descriptor;
      }

      public com.ourgame.mahjong.message.MJCommonMessage.Table getDefaultInstanceForType() {
        return com.ourgame.mahjong.message.MJCommonMessage.Table.getDefaultInstance();
      }

      public com.ourgame.mahjong.message.MJCommonMessage.Table build() {
        com.ourgame.mahjong.message.MJCommonMessage.Table result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.ourgame.mahjong.message.MJCommonMessage.Table buildPartial() {
        com.ourgame.mahjong.message.MJCommonMessage.Table result = new com.ourgame.mahjong.message.MJCommonMessage.Table(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.tableId_ = tableId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.tableName_ = tableName_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.playerAmount_ = playerAmount_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.maxPlayerAmount_ = maxPlayerAmount_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.enterBuyin_ = enterBuyin_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.enterScore_ = enterScore_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.unitValue_ = unitValue_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.minScore_ = minScore_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.ourgame.mahjong.message.MJCommonMessage.Table) {
          return mergeFrom((com.ourgame.mahjong.message.MJCommonMessage.Table)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.ourgame.mahjong.message.MJCommonMessage.Table other) {
        if (other == com.ourgame.mahjong.message.MJCommonMessage.Table.getDefaultInstance()) return this;
        if (other.hasTableId()) {
          setTableId(other.getTableId());
        }
        if (other.hasTableName()) {
          bitField0_ |= 0x00000002;
          tableName_ = other.tableName_;
          onChanged();
        }
        if (other.hasPlayerAmount()) {
          setPlayerAmount(other.getPlayerAmount());
        }
        if (other.hasMaxPlayerAmount()) {
          setMaxPlayerAmount(other.getMaxPlayerAmount());
        }
        if (other.hasEnterBuyin()) {
          setEnterBuyin(other.getEnterBuyin());
        }
        if (other.hasEnterScore()) {
          setEnterScore(other.getEnterScore());
        }
        if (other.hasUnitValue()) {
          setUnitValue(other.getUnitValue());
        }
        if (other.hasMinScore()) {
          setMinScore(other.getMinScore());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasTableId()) {
          
          return false;
        }
        if (!hasTableName()) {
          
          return false;
        }
        if (!hasPlayerAmount()) {
          
          return false;
        }
        if (!hasMaxPlayerAmount()) {
          
          return false;
        }
        if (!hasEnterBuyin()) {
          
          return false;
        }
        if (!hasEnterScore()) {
          
          return false;
        }
        if (!hasUnitValue()) {
          
          return false;
        }
        if (!hasMinScore()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.ourgame.mahjong.message.MJCommonMessage.Table parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.ourgame.mahjong.message.MJCommonMessage.Table) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required uint32 tableId = 1;
      private int tableId_ ;
      /**
       * <code>required uint32 tableId = 1;</code>
       *
       * <pre>
       *桌子ID
       * </pre>
       */
      public boolean hasTableId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required uint32 tableId = 1;</code>
       *
       * <pre>
       *桌子ID
       * </pre>
       */
      public int getTableId() {
        return tableId_;
      }
      /**
       * <code>required uint32 tableId = 1;</code>
       *
       * <pre>
       *桌子ID
       * </pre>
       */
      public Builder setTableId(int value) {
        bitField0_ |= 0x00000001;
        tableId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required uint32 tableId = 1;</code>
       *
       * <pre>
       *桌子ID
       * </pre>
       */
      public Builder clearTableId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        tableId_ = 0;
        onChanged();
        return this;
      }

      // required string tableName = 2;
      private java.lang.Object tableName_ = "";
      /**
       * <code>required string tableName = 2;</code>
       *
       * <pre>
       *桌子名
       * </pre>
       */
      public boolean hasTableName() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required string tableName = 2;</code>
       *
       * <pre>
       *桌子名
       * </pre>
       */
      public java.lang.String getTableName() {
        java.lang.Object ref = tableName_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          tableName_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string tableName = 2;</code>
       *
       * <pre>
       *桌子名
       * </pre>
       */
      public com.google.protobuf.ByteString
          getTableNameBytes() {
        java.lang.Object ref = tableName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          tableName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string tableName = 2;</code>
       *
       * <pre>
       *桌子名
       * </pre>
       */
      public Builder setTableName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        tableName_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string tableName = 2;</code>
       *
       * <pre>
       *桌子名
       * </pre>
       */
      public Builder clearTableName() {
        bitField0_ = (bitField0_ & ~0x00000002);
        tableName_ = getDefaultInstance().getTableName();
        onChanged();
        return this;
      }
      /**
       * <code>required string tableName = 2;</code>
       *
       * <pre>
       *桌子名
       * </pre>
       */
      public Builder setTableNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        tableName_ = value;
        onChanged();
        return this;
      }

      // required uint32 playerAmount = 3;
      private int playerAmount_ ;
      /**
       * <code>required uint32 playerAmount = 3;</code>
       *
       * <pre>
       *用户数量
       * </pre>
       */
      public boolean hasPlayerAmount() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required uint32 playerAmount = 3;</code>
       *
       * <pre>
       *用户数量
       * </pre>
       */
      public int getPlayerAmount() {
        return playerAmount_;
      }
      /**
       * <code>required uint32 playerAmount = 3;</code>
       *
       * <pre>
       *用户数量
       * </pre>
       */
      public Builder setPlayerAmount(int value) {
        bitField0_ |= 0x00000004;
        playerAmount_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required uint32 playerAmount = 3;</code>
       *
       * <pre>
       *用户数量
       * </pre>
       */
      public Builder clearPlayerAmount() {
        bitField0_ = (bitField0_ & ~0x00000004);
        playerAmount_ = 0;
        onChanged();
        return this;
      }

      // required uint32 maxPlayerAmount = 4;
      private int maxPlayerAmount_ ;
      /**
       * <code>required uint32 maxPlayerAmount = 4;</code>
       *
       * <pre>
       *最大游戏人数
       * </pre>
       */
      public boolean hasMaxPlayerAmount() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required uint32 maxPlayerAmount = 4;</code>
       *
       * <pre>
       *最大游戏人数
       * </pre>
       */
      public int getMaxPlayerAmount() {
        return maxPlayerAmount_;
      }
      /**
       * <code>required uint32 maxPlayerAmount = 4;</code>
       *
       * <pre>
       *最大游戏人数
       * </pre>
       */
      public Builder setMaxPlayerAmount(int value) {
        bitField0_ |= 0x00000008;
        maxPlayerAmount_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required uint32 maxPlayerAmount = 4;</code>
       *
       * <pre>
       *最大游戏人数
       * </pre>
       */
      public Builder clearMaxPlayerAmount() {
        bitField0_ = (bitField0_ & ~0x00000008);
        maxPlayerAmount_ = 0;
        onChanged();
        return this;
      }

      // required uint64 enterBuyin = 5;
      private long enterBuyin_ ;
      /**
       * <code>required uint64 enterBuyin = 5;</code>
       *
       * <pre>
       *进桌买入量
       * </pre>
       */
      public boolean hasEnterBuyin() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>required uint64 enterBuyin = 5;</code>
       *
       * <pre>
       *进桌买入量
       * </pre>
       */
      public long getEnterBuyin() {
        return enterBuyin_;
      }
      /**
       * <code>required uint64 enterBuyin = 5;</code>
       *
       * <pre>
       *进桌买入量
       * </pre>
       */
      public Builder setEnterBuyin(long value) {
        bitField0_ |= 0x00000010;
        enterBuyin_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required uint64 enterBuyin = 5;</code>
       *
       * <pre>
       *进桌买入量
       * </pre>
       */
      public Builder clearEnterBuyin() {
        bitField0_ = (bitField0_ & ~0x00000010);
        enterBuyin_ = 0L;
        onChanged();
        return this;
      }

      // required uint64 enterScore = 6;
      private long enterScore_ ;
      /**
       * <code>required uint64 enterScore = 6;</code>
       *
       * <pre>
       *买入所换的积分数量
       * </pre>
       */
      public boolean hasEnterScore() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>required uint64 enterScore = 6;</code>
       *
       * <pre>
       *买入所换的积分数量
       * </pre>
       */
      public long getEnterScore() {
        return enterScore_;
      }
      /**
       * <code>required uint64 enterScore = 6;</code>
       *
       * <pre>
       *买入所换的积分数量
       * </pre>
       */
      public Builder setEnterScore(long value) {
        bitField0_ |= 0x00000020;
        enterScore_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required uint64 enterScore = 6;</code>
       *
       * <pre>
       *买入所换的积分数量
       * </pre>
       */
      public Builder clearEnterScore() {
        bitField0_ = (bitField0_ & ~0x00000020);
        enterScore_ = 0L;
        onChanged();
        return this;
      }

      // required uint32 unitValue = 7;
      private int unitValue_ ;
      /**
       * <code>required uint32 unitValue = 7;</code>
       *
       * <pre>
       *游戏每奖分折合桌子积分的数量
       * </pre>
       */
      public boolean hasUnitValue() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>required uint32 unitValue = 7;</code>
       *
       * <pre>
       *游戏每奖分折合桌子积分的数量
       * </pre>
       */
      public int getUnitValue() {
        return unitValue_;
      }
      /**
       * <code>required uint32 unitValue = 7;</code>
       *
       * <pre>
       *游戏每奖分折合桌子积分的数量
       * </pre>
       */
      public Builder setUnitValue(int value) {
        bitField0_ |= 0x00000040;
        unitValue_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required uint32 unitValue = 7;</code>
       *
       * <pre>
       *游戏每奖分折合桌子积分的数量
       * </pre>
       */
      public Builder clearUnitValue() {
        bitField0_ = (bitField0_ & ~0x00000040);
        unitValue_ = 0;
        onChanged();
        return this;
      }

      // required uint32 minScore = 8;
      private int minScore_ ;
      /**
       * <code>required uint32 minScore = 8;</code>
       *
       * <pre>
       *最低积分，积分低于此值将会被强制要求重新买入，或踢出
       * </pre>
       */
      public boolean hasMinScore() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>required uint32 minScore = 8;</code>
       *
       * <pre>
       *最低积分，积分低于此值将会被强制要求重新买入，或踢出
       * </pre>
       */
      public int getMinScore() {
        return minScore_;
      }
      /**
       * <code>required uint32 minScore = 8;</code>
       *
       * <pre>
       *最低积分，积分低于此值将会被强制要求重新买入，或踢出
       * </pre>
       */
      public Builder setMinScore(int value) {
        bitField0_ |= 0x00000080;
        minScore_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required uint32 minScore = 8;</code>
       *
       * <pre>
       *最低积分，积分低于此值将会被强制要求重新买入，或踢出
       * </pre>
       */
      public Builder clearMinScore() {
        bitField0_ = (bitField0_ & ~0x00000080);
        minScore_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.ourgame.mahjong.message.Table)
    }

    static {
      defaultInstance = new Table(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.ourgame.mahjong.message.Table)
  }

  public interface TablePlayerOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required sint32 seat = 1;
    /**
     * <code>required sint32 seat = 1;</code>
     */
    boolean hasSeat();
    /**
     * <code>required sint32 seat = 1;</code>
     */
    int getSeat();

    // required uint64 userId = 2;
    /**
     * <code>required uint64 userId = 2;</code>
     */
    boolean hasUserId();
    /**
     * <code>required uint64 userId = 2;</code>
     */
    long getUserId();

    // required string nickname = 3;
    /**
     * <code>required string nickname = 3;</code>
     */
    boolean hasNickname();
    /**
     * <code>required string nickname = 3;</code>
     */
    java.lang.String getNickname();
    /**
     * <code>required string nickname = 3;</code>
     */
    com.google.protobuf.ByteString
        getNicknameBytes();

    // required sint32 score = 4;
    /**
     * <code>required sint32 score = 4;</code>
     *
     * <pre>
     *sint考虑到比赛时可能有负分，房间没有负分
     * </pre>
     */
    boolean hasScore();
    /**
     * <code>required sint32 score = 4;</code>
     *
     * <pre>
     *sint考虑到比赛时可能有负分，房间没有负分
     * </pre>
     */
    int getScore();

    // optional uint32 gender = 5;
    /**
     * <code>optional uint32 gender = 5;</code>
     *
     * <pre>
     *性别
     * </pre>
     */
    boolean hasGender();
    /**
     * <code>optional uint32 gender = 5;</code>
     *
     * <pre>
     *性别
     * </pre>
     */
    int getGender();

    // optional string headImage = 6;
    /**
     * <code>optional string headImage = 6;</code>
     *
     * <pre>
     *头像连接
     * </pre>
     */
    boolean hasHeadImage();
    /**
     * <code>optional string headImage = 6;</code>
     *
     * <pre>
     *头像连接
     * </pre>
     */
    java.lang.String getHeadImage();
    /**
     * <code>optional string headImage = 6;</code>
     *
     * <pre>
     *头像连接
     * </pre>
     */
    com.google.protobuf.ByteString
        getHeadImageBytes();

    // optional uint32 level = 7;
    /**
     * <code>optional uint32 level = 7;</code>
     *
     * <pre>
     *等级
     * </pre>
     */
    boolean hasLevel();
    /**
     * <code>optional uint32 level = 7;</code>
     *
     * <pre>
     *等级
     * </pre>
     */
    int getLevel();

    // optional uint32 experience = 8;
    /**
     * <code>optional uint32 experience = 8;</code>
     *
     * <pre>
     *经验
     * </pre>
     */
    boolean hasExperience();
    /**
     * <code>optional uint32 experience = 8;</code>
     *
     * <pre>
     *经验
     * </pre>
     */
    int getExperience();

    // optional float winRate = 9;
    /**
     * <code>optional float winRate = 9;</code>
     *
     * <pre>
     *胜率
     * </pre>
     */
    boolean hasWinRate();
    /**
     * <code>optional float winRate = 9;</code>
     *
     * <pre>
     *胜率
     * </pre>
     */
    float getWinRate();
  }
  /**
   * Protobuf type {@code com.ourgame.mahjong.message.TablePlayer}
   *
   * <pre>
   * 玩家
   * </pre>
   */
  public static final class TablePlayer extends
      com.google.protobuf.GeneratedMessage
      implements TablePlayerOrBuilder {
    // Use TablePlayer.newBuilder() to construct.
    private TablePlayer(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private TablePlayer(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final TablePlayer defaultInstance;
    public static TablePlayer getDefaultInstance() {
      return defaultInstance;
    }

    public TablePlayer getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private TablePlayer(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              seat_ = input.readSInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              userId_ = input.readUInt64();
              break;
            }
            case 26: {
              bitField0_ |= 0x00000004;
              nickname_ = input.readBytes();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              score_ = input.readSInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              gender_ = input.readUInt32();
              break;
            }
            case 50: {
              bitField0_ |= 0x00000020;
              headImage_ = input.readBytes();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              level_ = input.readUInt32();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000080;
              experience_ = input.readUInt32();
              break;
            }
            case 77: {
              bitField0_ |= 0x00000100;
              winRate_ = input.readFloat();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.ourgame.mahjong.message.MJCommonMessage.internal_static_com_ourgame_mahjong_message_TablePlayer_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.ourgame.mahjong.message.MJCommonMessage.internal_static_com_ourgame_mahjong_message_TablePlayer_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.ourgame.mahjong.message.MJCommonMessage.TablePlayer.class, com.ourgame.mahjong.message.MJCommonMessage.TablePlayer.Builder.class);
    }

    public static com.google.protobuf.Parser<TablePlayer> PARSER =
        new com.google.protobuf.AbstractParser<TablePlayer>() {
      public TablePlayer parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TablePlayer(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<TablePlayer> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required sint32 seat = 1;
    public static final int SEAT_FIELD_NUMBER = 1;
    private int seat_;
    /**
     * <code>required sint32 seat = 1;</code>
     */
    public boolean hasSeat() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required sint32 seat = 1;</code>
     */
    public int getSeat() {
      return seat_;
    }

    // required uint64 userId = 2;
    public static final int USERID_FIELD_NUMBER = 2;
    private long userId_;
    /**
     * <code>required uint64 userId = 2;</code>
     */
    public boolean hasUserId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required uint64 userId = 2;</code>
     */
    public long getUserId() {
      return userId_;
    }

    // required string nickname = 3;
    public static final int NICKNAME_FIELD_NUMBER = 3;
    private java.lang.Object nickname_;
    /**
     * <code>required string nickname = 3;</code>
     */
    public boolean hasNickname() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required string nickname = 3;</code>
     */
    public java.lang.String getNickname() {
      java.lang.Object ref = nickname_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          nickname_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string nickname = 3;</code>
     */
    public com.google.protobuf.ByteString
        getNicknameBytes() {
      java.lang.Object ref = nickname_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        nickname_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // required sint32 score = 4;
    public static final int SCORE_FIELD_NUMBER = 4;
    private int score_;
    /**
     * <code>required sint32 score = 4;</code>
     *
     * <pre>
     *sint考虑到比赛时可能有负分，房间没有负分
     * </pre>
     */
    public boolean hasScore() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required sint32 score = 4;</code>
     *
     * <pre>
     *sint考虑到比赛时可能有负分，房间没有负分
     * </pre>
     */
    public int getScore() {
      return score_;
    }

    // optional uint32 gender = 5;
    public static final int GENDER_FIELD_NUMBER = 5;
    private int gender_;
    /**
     * <code>optional uint32 gender = 5;</code>
     *
     * <pre>
     *性别
     * </pre>
     */
    public boolean hasGender() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional uint32 gender = 5;</code>
     *
     * <pre>
     *性别
     * </pre>
     */
    public int getGender() {
      return gender_;
    }

    // optional string headImage = 6;
    public static final int HEADIMAGE_FIELD_NUMBER = 6;
    private java.lang.Object headImage_;
    /**
     * <code>optional string headImage = 6;</code>
     *
     * <pre>
     *头像连接
     * </pre>
     */
    public boolean hasHeadImage() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional string headImage = 6;</code>
     *
     * <pre>
     *头像连接
     * </pre>
     */
    public java.lang.String getHeadImage() {
      java.lang.Object ref = headImage_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          headImage_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string headImage = 6;</code>
     *
     * <pre>
     *头像连接
     * </pre>
     */
    public com.google.protobuf.ByteString
        getHeadImageBytes() {
      java.lang.Object ref = headImage_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        headImage_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional uint32 level = 7;
    public static final int LEVEL_FIELD_NUMBER = 7;
    private int level_;
    /**
     * <code>optional uint32 level = 7;</code>
     *
     * <pre>
     *等级
     * </pre>
     */
    public boolean hasLevel() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional uint32 level = 7;</code>
     *
     * <pre>
     *等级
     * </pre>
     */
    public int getLevel() {
      return level_;
    }

    // optional uint32 experience = 8;
    public static final int EXPERIENCE_FIELD_NUMBER = 8;
    private int experience_;
    /**
     * <code>optional uint32 experience = 8;</code>
     *
     * <pre>
     *经验
     * </pre>
     */
    public boolean hasExperience() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional uint32 experience = 8;</code>
     *
     * <pre>
     *经验
     * </pre>
     */
    public int getExperience() {
      return experience_;
    }

    // optional float winRate = 9;
    public static final int WINRATE_FIELD_NUMBER = 9;
    private float winRate_;
    /**
     * <code>optional float winRate = 9;</code>
     *
     * <pre>
     *胜率
     * </pre>
     */
    public boolean hasWinRate() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional float winRate = 9;</code>
     *
     * <pre>
     *胜率
     * </pre>
     */
    public float getWinRate() {
      return winRate_;
    }

    private void initFields() {
      seat_ = 0;
      userId_ = 0L;
      nickname_ = "";
      score_ = 0;
      gender_ = 0;
      headImage_ = "";
      level_ = 0;
      experience_ = 0;
      winRate_ = 0F;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasSeat()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasUserId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasNickname()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasScore()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeSInt32(1, seat_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt64(2, userId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, getNicknameBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeSInt32(4, score_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeUInt32(5, gender_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeBytes(6, getHeadImageBytes());
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeUInt32(7, level_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeUInt32(8, experience_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeFloat(9, winRate_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(1, seat_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(2, userId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getNicknameBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(4, score_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(5, gender_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(6, getHeadImageBytes());
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(7, level_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(8, experience_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(9, winRate_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.ourgame.mahjong.message.MJCommonMessage.TablePlayer parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ourgame.mahjong.message.MJCommonMessage.TablePlayer parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ourgame.mahjong.message.MJCommonMessage.TablePlayer parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ourgame.mahjong.message.MJCommonMessage.TablePlayer parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ourgame.mahjong.message.MJCommonMessage.TablePlayer parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.ourgame.mahjong.message.MJCommonMessage.TablePlayer parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.ourgame.mahjong.message.MJCommonMessage.TablePlayer parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.ourgame.mahjong.message.MJCommonMessage.TablePlayer parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.ourgame.mahjong.message.MJCommonMessage.TablePlayer parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.ourgame.mahjong.message.MJCommonMessage.TablePlayer parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.ourgame.mahjong.message.MJCommonMessage.TablePlayer prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.ourgame.mahjong.message.TablePlayer}
     *
     * <pre>
     * 玩家
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.ourgame.mahjong.message.MJCommonMessage.TablePlayerOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.ourgame.mahjong.message.MJCommonMessage.internal_static_com_ourgame_mahjong_message_TablePlayer_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.ourgame.mahjong.message.MJCommonMessage.internal_static_com_ourgame_mahjong_message_TablePlayer_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.ourgame.mahjong.message.MJCommonMessage.TablePlayer.class, com.ourgame.mahjong.message.MJCommonMessage.TablePlayer.Builder.class);
      }

      // Construct using com.ourgame.mahjong.message.MJCommonMessage.TablePlayer.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        seat_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        userId_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000002);
        nickname_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        score_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        gender_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        headImage_ = "";
        bitField0_ = (bitField0_ & ~0x00000020);
        level_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        experience_ = 0;
        bitField0_ = (bitField0_ & ~0x00000080);
        winRate_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000100);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.ourgame.mahjong.message.MJCommonMessage.internal_static_com_ourgame_mahjong_message_TablePlayer_descriptor;
      }

      public com.ourgame.mahjong.message.MJCommonMessage.TablePlayer getDefaultInstanceForType() {
        return com.ourgame.mahjong.message.MJCommonMessage.TablePlayer.getDefaultInstance();
      }

      public com.ourgame.mahjong.message.MJCommonMessage.TablePlayer build() {
        com.ourgame.mahjong.message.MJCommonMessage.TablePlayer result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.ourgame.mahjong.message.MJCommonMessage.TablePlayer buildPartial() {
        com.ourgame.mahjong.message.MJCommonMessage.TablePlayer result = new com.ourgame.mahjong.message.MJCommonMessage.TablePlayer(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.seat_ = seat_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.userId_ = userId_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.nickname_ = nickname_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.score_ = score_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.gender_ = gender_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.headImage_ = headImage_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.level_ = level_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.experience_ = experience_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.winRate_ = winRate_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.ourgame.mahjong.message.MJCommonMessage.TablePlayer) {
          return mergeFrom((com.ourgame.mahjong.message.MJCommonMessage.TablePlayer)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.ourgame.mahjong.message.MJCommonMessage.TablePlayer other) {
        if (other == com.ourgame.mahjong.message.MJCommonMessage.TablePlayer.getDefaultInstance()) return this;
        if (other.hasSeat()) {
          setSeat(other.getSeat());
        }
        if (other.hasUserId()) {
          setUserId(other.getUserId());
        }
        if (other.hasNickname()) {
          bitField0_ |= 0x00000004;
          nickname_ = other.nickname_;
          onChanged();
        }
        if (other.hasScore()) {
          setScore(other.getScore());
        }
        if (other.hasGender()) {
          setGender(other.getGender());
        }
        if (other.hasHeadImage()) {
          bitField0_ |= 0x00000020;
          headImage_ = other.headImage_;
          onChanged();
        }
        if (other.hasLevel()) {
          setLevel(other.getLevel());
        }
        if (other.hasExperience()) {
          setExperience(other.getExperience());
        }
        if (other.hasWinRate()) {
          setWinRate(other.getWinRate());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasSeat()) {
          
          return false;
        }
        if (!hasUserId()) {
          
          return false;
        }
        if (!hasNickname()) {
          
          return false;
        }
        if (!hasScore()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.ourgame.mahjong.message.MJCommonMessage.TablePlayer parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.ourgame.mahjong.message.MJCommonMessage.TablePlayer) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required sint32 seat = 1;
      private int seat_ ;
      /**
       * <code>required sint32 seat = 1;</code>
       */
      public boolean hasSeat() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required sint32 seat = 1;</code>
       */
      public int getSeat() {
        return seat_;
      }
      /**
       * <code>required sint32 seat = 1;</code>
       */
      public Builder setSeat(int value) {
        bitField0_ |= 0x00000001;
        seat_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required sint32 seat = 1;</code>
       */
      public Builder clearSeat() {
        bitField0_ = (bitField0_ & ~0x00000001);
        seat_ = 0;
        onChanged();
        return this;
      }

      // required uint64 userId = 2;
      private long userId_ ;
      /**
       * <code>required uint64 userId = 2;</code>
       */
      public boolean hasUserId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required uint64 userId = 2;</code>
       */
      public long getUserId() {
        return userId_;
      }
      /**
       * <code>required uint64 userId = 2;</code>
       */
      public Builder setUserId(long value) {
        bitField0_ |= 0x00000002;
        userId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required uint64 userId = 2;</code>
       */
      public Builder clearUserId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        userId_ = 0L;
        onChanged();
        return this;
      }

      // required string nickname = 3;
      private java.lang.Object nickname_ = "";
      /**
       * <code>required string nickname = 3;</code>
       */
      public boolean hasNickname() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required string nickname = 3;</code>
       */
      public java.lang.String getNickname() {
        java.lang.Object ref = nickname_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          nickname_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string nickname = 3;</code>
       */
      public com.google.protobuf.ByteString
          getNicknameBytes() {
        java.lang.Object ref = nickname_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          nickname_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string nickname = 3;</code>
       */
      public Builder setNickname(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        nickname_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string nickname = 3;</code>
       */
      public Builder clearNickname() {
        bitField0_ = (bitField0_ & ~0x00000004);
        nickname_ = getDefaultInstance().getNickname();
        onChanged();
        return this;
      }
      /**
       * <code>required string nickname = 3;</code>
       */
      public Builder setNicknameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        nickname_ = value;
        onChanged();
        return this;
      }

      // required sint32 score = 4;
      private int score_ ;
      /**
       * <code>required sint32 score = 4;</code>
       *
       * <pre>
       *sint考虑到比赛时可能有负分，房间没有负分
       * </pre>
       */
      public boolean hasScore() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required sint32 score = 4;</code>
       *
       * <pre>
       *sint考虑到比赛时可能有负分，房间没有负分
       * </pre>
       */
      public int getScore() {
        return score_;
      }
      /**
       * <code>required sint32 score = 4;</code>
       *
       * <pre>
       *sint考虑到比赛时可能有负分，房间没有负分
       * </pre>
       */
      public Builder setScore(int value) {
        bitField0_ |= 0x00000008;
        score_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required sint32 score = 4;</code>
       *
       * <pre>
       *sint考虑到比赛时可能有负分，房间没有负分
       * </pre>
       */
      public Builder clearScore() {
        bitField0_ = (bitField0_ & ~0x00000008);
        score_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 gender = 5;
      private int gender_ ;
      /**
       * <code>optional uint32 gender = 5;</code>
       *
       * <pre>
       *性别
       * </pre>
       */
      public boolean hasGender() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional uint32 gender = 5;</code>
       *
       * <pre>
       *性别
       * </pre>
       */
      public int getGender() {
        return gender_;
      }
      /**
       * <code>optional uint32 gender = 5;</code>
       *
       * <pre>
       *性别
       * </pre>
       */
      public Builder setGender(int value) {
        bitField0_ |= 0x00000010;
        gender_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 gender = 5;</code>
       *
       * <pre>
       *性别
       * </pre>
       */
      public Builder clearGender() {
        bitField0_ = (bitField0_ & ~0x00000010);
        gender_ = 0;
        onChanged();
        return this;
      }

      // optional string headImage = 6;
      private java.lang.Object headImage_ = "";
      /**
       * <code>optional string headImage = 6;</code>
       *
       * <pre>
       *头像连接
       * </pre>
       */
      public boolean hasHeadImage() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional string headImage = 6;</code>
       *
       * <pre>
       *头像连接
       * </pre>
       */
      public java.lang.String getHeadImage() {
        java.lang.Object ref = headImage_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          headImage_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string headImage = 6;</code>
       *
       * <pre>
       *头像连接
       * </pre>
       */
      public com.google.protobuf.ByteString
          getHeadImageBytes() {
        java.lang.Object ref = headImage_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          headImage_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string headImage = 6;</code>
       *
       * <pre>
       *头像连接
       * </pre>
       */
      public Builder setHeadImage(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
        headImage_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string headImage = 6;</code>
       *
       * <pre>
       *头像连接
       * </pre>
       */
      public Builder clearHeadImage() {
        bitField0_ = (bitField0_ & ~0x00000020);
        headImage_ = getDefaultInstance().getHeadImage();
        onChanged();
        return this;
      }
      /**
       * <code>optional string headImage = 6;</code>
       *
       * <pre>
       *头像连接
       * </pre>
       */
      public Builder setHeadImageBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
        headImage_ = value;
        onChanged();
        return this;
      }

      // optional uint32 level = 7;
      private int level_ ;
      /**
       * <code>optional uint32 level = 7;</code>
       *
       * <pre>
       *等级
       * </pre>
       */
      public boolean hasLevel() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional uint32 level = 7;</code>
       *
       * <pre>
       *等级
       * </pre>
       */
      public int getLevel() {
        return level_;
      }
      /**
       * <code>optional uint32 level = 7;</code>
       *
       * <pre>
       *等级
       * </pre>
       */
      public Builder setLevel(int value) {
        bitField0_ |= 0x00000040;
        level_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 level = 7;</code>
       *
       * <pre>
       *等级
       * </pre>
       */
      public Builder clearLevel() {
        bitField0_ = (bitField0_ & ~0x00000040);
        level_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 experience = 8;
      private int experience_ ;
      /**
       * <code>optional uint32 experience = 8;</code>
       *
       * <pre>
       *经验
       * </pre>
       */
      public boolean hasExperience() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional uint32 experience = 8;</code>
       *
       * <pre>
       *经验
       * </pre>
       */
      public int getExperience() {
        return experience_;
      }
      /**
       * <code>optional uint32 experience = 8;</code>
       *
       * <pre>
       *经验
       * </pre>
       */
      public Builder setExperience(int value) {
        bitField0_ |= 0x00000080;
        experience_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 experience = 8;</code>
       *
       * <pre>
       *经验
       * </pre>
       */
      public Builder clearExperience() {
        bitField0_ = (bitField0_ & ~0x00000080);
        experience_ = 0;
        onChanged();
        return this;
      }

      // optional float winRate = 9;
      private float winRate_ ;
      /**
       * <code>optional float winRate = 9;</code>
       *
       * <pre>
       *胜率
       * </pre>
       */
      public boolean hasWinRate() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional float winRate = 9;</code>
       *
       * <pre>
       *胜率
       * </pre>
       */
      public float getWinRate() {
        return winRate_;
      }
      /**
       * <code>optional float winRate = 9;</code>
       *
       * <pre>
       *胜率
       * </pre>
       */
      public Builder setWinRate(float value) {
        bitField0_ |= 0x00000100;
        winRate_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float winRate = 9;</code>
       *
       * <pre>
       *胜率
       * </pre>
       */
      public Builder clearWinRate() {
        bitField0_ = (bitField0_ & ~0x00000100);
        winRate_ = 0F;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.ourgame.mahjong.message.TablePlayer)
    }

    static {
      defaultInstance = new TablePlayer(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.ourgame.mahjong.message.TablePlayer)
  }

  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_ourgame_mahjong_message_GameInfo_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_ourgame_mahjong_message_GameInfo_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_ourgame_mahjong_message_Room_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_ourgame_mahjong_message_Room_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_ourgame_mahjong_message_Table_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_ourgame_mahjong_message_Table_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_ourgame_mahjong_message_TablePlayer_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_ourgame_mahjong_message_TablePlayer_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\025MJCommonMessage.proto\022\033com.ourgame.mah" +
      "jong.message\"O\n\010GameInfo\022\016\n\006roomId\030\001 \002(\r" +
      "\022\017\n\007tableId\030\002 \002(\r\022\016\n\006gameId\030\003 \002(\004\022\022\n\ngam" +
      "eServer\030\004 \002(\004\"\207\001\n\004Room\022\016\n\006roomId\030\001 \002(\r\022\020" +
      "\n\010roomName\030\002 \002(\t\022\020\n\010roomType\030\003 \002(\r\022\020\n\010ga" +
      "meType\030\004 \002(\r\022\022\n\nuserAmount\030\005 \001(\r\022\022\n\nente" +
      "rBuyIn\030\006 \001(\r\022\021\n\tunitValue\030\007 \001(\r\"\247\001\n\005Tabl" +
      "e\022\017\n\007tableId\030\001 \002(\r\022\021\n\ttableName\030\002 \002(\t\022\024\n" +
      "\014playerAmount\030\003 \002(\r\022\027\n\017maxPlayerAmount\030\004" +
      " \002(\r\022\022\n\nenterBuyin\030\005 \002(\004\022\022\n\nenterScore\030\006",
      " \002(\004\022\021\n\tunitValue\030\007 \002(\r\022\020\n\010minScore\030\010 \002(" +
      "\r\"\243\001\n\013TablePlayer\022\014\n\004seat\030\001 \002(\021\022\016\n\006userI" +
      "d\030\002 \002(\004\022\020\n\010nickname\030\003 \002(\t\022\r\n\005score\030\004 \002(\021" +
      "\022\016\n\006gender\030\005 \001(\r\022\021\n\theadImage\030\006 \001(\t\022\r\n\005l" +
      "evel\030\007 \001(\r\022\022\n\nexperience\030\010 \001(\r\022\017\n\007winRat" +
      "e\030\t \001(\002"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_com_ourgame_mahjong_message_GameInfo_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_com_ourgame_mahjong_message_GameInfo_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_ourgame_mahjong_message_GameInfo_descriptor,
              new java.lang.String[] { "RoomId", "TableId", "GameId", "GameServer", });
          internal_static_com_ourgame_mahjong_message_Room_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_com_ourgame_mahjong_message_Room_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_ourgame_mahjong_message_Room_descriptor,
              new java.lang.String[] { "RoomId", "RoomName", "RoomType", "GameType", "UserAmount", "EnterBuyIn", "UnitValue", });
          internal_static_com_ourgame_mahjong_message_Table_descriptor =
            getDescriptor().getMessageTypes().get(2);
          internal_static_com_ourgame_mahjong_message_Table_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_ourgame_mahjong_message_Table_descriptor,
              new java.lang.String[] { "TableId", "TableName", "PlayerAmount", "MaxPlayerAmount", "EnterBuyin", "EnterScore", "UnitValue", "MinScore", });
          internal_static_com_ourgame_mahjong_message_TablePlayer_descriptor =
            getDescriptor().getMessageTypes().get(3);
          internal_static_com_ourgame_mahjong_message_TablePlayer_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_ourgame_mahjong_message_TablePlayer_descriptor,
              new java.lang.String[] { "Seat", "UserId", "Nickname", "Score", "Gender", "HeadImage", "Level", "Experience", "WinRate", });
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }

  // @@protoc_insertion_point(outer_class_scope)
}
